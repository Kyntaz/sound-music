# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'src/smlearner.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import SoundMusic as sm
import random
import pickle

class Ui_MainWindow(QtWidgets.QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(818, 440)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 20, 501, 141))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("src\\../docs/SoundMusic.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider.setGeometry(QtCore.QRect(240, 250, 371, 22))
        self.horizontalSlider.setMinimum(-5)
        self.horizontalSlider.setMaximum(5)
        self.horizontalSlider.setPageStep(1)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.horizontalSlider.setTickInterval(1)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(380, 190, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.loadAudio)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(290, 290, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.playAudio)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(470, 290, 93, 28))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.addEval)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(380, 370, 93, 28))
        self.pushButton_4.setStyleSheet("background-color: rgb(88, 142, 168)")
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(self.export)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(670, 20, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(88, 142, 168)")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(220, 250, 31, 21))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(620, 250, 31, 21))
        self.label_4.setObjectName("label_4")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.lso = []
        self.curr_sound = None
        self.u_inputs = []

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "SMLearner"))
        self.pushButton.setText(_translate("MainWindow", "Load New File"))
        self.pushButton_2.setText(_translate("MainWindow", "Play"))
        self.pushButton_3.setText(_translate("MainWindow", "Add (0)"))
        self.pushButton_4.setText(_translate("MainWindow", "Export"))
        self.label_2.setText(_translate("MainWindow", "Learner"))
        self.label_3.setText(_translate("MainWindow", "-5"))
        self.label_4.setText(_translate("MainWindow", "5"))

    def loadAudio(self):
        fname,_ = QtWidgets.QFileDialog.getOpenFileName(self, 'Open file', 
            '',"Audio files (*.wav *.mp3 *.aac *.flac)")
        if len(fname) == 0: return

        so = sm.sound.load(fname)
        self.lso = sm.extraction.get_sounds(so)
        synth = sm.synth.SoundSynth()
        self.curr_sound = synth.gen(random.choice(self.lso))
        self.horizontalSlider.setValue(5)

    def playAudio(self):
        if self.curr_sound != None:
            self.curr_sound.play()

    def addEval(self):
        if self.curr_sound != None:
            score = self.horizontalSlider.value()
            score += self.u_inputs[-1][1]
            self.u_inputs.append([self.curr_sound, score])
            synth = sm.synth.SoundSynth()
            self.curr_sound = synth.gen(random.choice(self.lso))
            self.horizontalSlider.setValue(0)
            _translate = QtCore.QCoreApplication.translate
            self.pushButton_3.setText(_translate("MainWindow", f"Add ({len(self.u_inputs)})"))



    def export(self):
        fname,_ = QtWidgets.QFileDialog.getSaveFileName(self, 'Open file', 
            '',"Fitness Model (*.svm)")
        if len(fname) == 0: return

        svm = sm.synth.get_model(self.u_inputs)

        with open(fname, "wb") as f:
            pickle.dump(svm, f)


def main():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

if __name__ == "__main__":
    main()
